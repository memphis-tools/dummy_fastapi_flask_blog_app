services:
  nginx:
    build:
      context: .
      dockerfile: ./nginx/local-Dockerfile
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - fastapi
      - flask_front
    networks:
      - app-network
    volumes:
      - ./nginx/local_conf:/etc/nginx/conf.d
      - static_volume:/home/dummy-operator/flask/staticfiles

  flask_front:
    build:
      context: .
      dockerfile: ./gunicorn_flask/Dockerfile
    container_name: flask
    command: gunicorn --bind 0.0.0.0:8001 flask_app.manage:app
    expose:
      - 8001
    environment:
      - SCOPE
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_PRODUCTION_DB_NAME
      - POSTGRES_TEST_DB_NAME
      - POSTGRES_PORT
      - POSTGRES_HOST
      - ADMIN_EMAIL
      - ADMIN_LOGIN
      - ADMIN_PASSWORD
      - TEST_USER_PWD
      - SECRET_KEY
      - BETTERSTACK_SOURCE_TOKEN
      - HCAPTCHA_SITE_KEY
      - HCAPTCHA_SITE_SECRET
      - CELERY_BROKER_URL
      - CELERY_RESULT_BACKEND
    networks:
      - app-network
    depends_on:
      - fastapi
    volumes:
      - static_volume:/home/dummy-operator/flask/staticfiles

  fastapi:
    build:
      context: .
      dockerfile: ./uvicorn_fastapi/Dockerfile
    container_name: fastapi
    expose:
      - 8000
    environment:
      - SCOPE
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_PRODUCTION_DB_NAME
      - POSTGRES_TEST_DB_NAME
      - POSTGRES_PORT
      - POSTGRES_HOST
      - ADMIN_EMAIL
      - ADMIN_LOGIN
      - ADMIN_PASSWORD
      - TEST_USER_PWD
      - SECRET_KEY
      - BETTERSTACK_SOURCE_TOKEN
      - CELERY_BROKER_URL
      - CELERY_RESULT_BACKEND
    networks:
      - app-network
    depends_on:
      - db
    restart: always

  db:
    image: postgres:15.0-alpine
    container_name: db
    expose:
      - 5432
    environment:
      - SCOPE
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_PRODUCTION_DB_NAME
      - POSTGRES_TEST_DB_NAME
      - POSTGRES_PORT
      - POSTGRES_HOST
      - ADMIN_EMAIL
      - ADMIN_LOGIN
      - ADMIN_PASSWORD
    networks:
      - app-network
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  redis:
    build:
      context: .
      dockerfile: ./redis/Dockerfile
    container_name: redis
    expose:
      - 6379
    volumes:
      - redis_data:/data
    depends_on:
      - db
      - rabbitmq
    networks:
      - app-network

  rabbitmq:
    build:
      context: .
      dockerfile: ./rabbitmq/Dockerfile
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS
      - RABBITMQ_DEFAULT_VHOST=$RABBITMQ_DEFAULT_VHOST
      - NODENAME=rabbit@localhost
      - RABBITMQ_DEFAULT_PERMISSIONS_REGEX=^.*$$
      - ERLANG_COOKIE_NAME="erlang_cookie"
    expose:
      - 5672
    depends_on:
      - flask_front
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/conf.d/20-custom.conf
      - rabbitmq_data:/var/lib/rabbitmq/
    networks:
      - app-network

  celery:
    build:
      context: .
      dockerfile: ./app/packages/celery_client_and_worker/celery_worker.Dockerfile
    container_name: celery
    expose:
      - 5555
    environment:
      - CELERY_BROKER_URL=$CELERY_BROKER_URL
      - CELERY_RESULT_BACKEND=$CELERY_RESULT_BACKEND
      - TIMEZONE=$TIMEZONE
      - SENDGRID_API_KEY
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_PRODUCTION_DB_NAME
      - POSTGRES_TEST_DB_NAME
      - POSTGRES_PORT
      - POSTGRES_HOST
      - PDF_FOLDER_PATH
      - PDF_FILE_NAME
    volumes:
      - static_volume:/home/dummy-operator/staticfiles
    depends_on:
      - redis
      - rabbitmq
      - flask_front
    networks:
      - app-network

volumes:
  postgres_data:
  static_volume:
  rabbitmq_data:
  redis_data:

networks:
  app-network:
    driver: bridge
